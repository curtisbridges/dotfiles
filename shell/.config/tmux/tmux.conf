# Symbol Meaning
# * Denotes the current window.
# - Marks the last window (previously selected).
# # Window is monitored and activity has been detected.
# ! A bell has occurred in the window.
# + Window is monitored for content and it has appeared.
# ~ The window has been silent for the monitor-silence interval.

# use C-space instead of default C-b
unbind-key C-b
set-option -g prefix C-Space
# bind-key C-Space send-prefix # (sensible)
# bind-key Space last-window # (sensible)

# Set the default shell
set -g default-shell ${SHELL}
set -g default-command ${SHELL}

# Vi bindings and compatibility where possible.
set-window-option -g mode-keys vi
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

bind s choose-tree

# Switch panes with arrow keys
bind Up select-pane -U
bind Down select-pane -D
bind Left select-pane -L
bind Right select-pane -R

# Resize panes
bind -r S-Up resize-pane -U 5      # 5 px bigger up
bind -r S-Down resize-pane -D 5    # 5 px bigger down
bind -r S-Left resize-pane -L 5    # 5 px bigger to the left
bind -r S-Right resize-pane -R 5   # 5 px bigger right

# Mouse settings
set -g mouse on # turn on the mouse

# Misc settings
# set -g history-limit 100000 # (sensible) # lots of history
# set -sg escape-time 0       # (sensible) # No delay for escape key press
set-window-option -g monitor-activity on # highlight window when it has new activity
set -g visual-activity on
set -g display-time 2000

# Automatically set window title
set-window-option -g allow-rename on
# set-window-option -g automatic-rename on
# set-window-option -g automatic-rename-format '#{b:pane_current_path}'
# setw -g automatic-rename-format '#{=-20:#{b:pane_current_path}}'
# setw -g automatic-rename-format "#(basename '#{pane_current_path}')"
# set -g status-interval 1 # (sensible)
# set -g set-titles on

# re-number windows when one is closed
set -g renumber-windows on
set -g status-position top
set -g base-index 1 # start base index at 1 since 0 is the other hand
set-window-option -g pane-base-index 1 # same thing for panes

# Re-order windows
# bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
# bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# !!!NOTE: Not compatible with iterm2 !!!
# setw -g aggressive-resize on

# Plugins
# Automatic install of tmux plugin manager if it doesn't exist.
if "test ! -d $TMUX_PLUGIN_MANAGER_PATH/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm $TMUX_PLUGIN_MANAGER_PATH && $TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins'"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'odedlaz/tmux-onedark-theme'

#set -g @plugin "arcticicestudio/nord-tmux"

# automatically restore last tmux sessions on tmux start
set -g @continuum-restore 'on'
set -g @resurrect-dir "$XDG_DATA_HOME/tmux/resurrect"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm"
